type Query {
  findUser(name: String!, password: String!): String!
  allPosts: [Post!]!
  givePosts(user: String!): [Post!]!
  obtainPosts(user: String!): [Post!]!
  validPosts: [Post!]!
  postDetail(postId: ID!): Post!
}

type Mutation {
  createUser(name: String!, password: String!): String!
  newPost(input: NewPostInput!): Post
  order(name: String!, postId: ID!): String!
  deletePost(postId: ID!): ID!
  deleteObtainPost(name: String!, postId: ID!): ID!
}

type Subscription {
  postCreated: Post!
  orderCreated: Post!
  postDeleted: ID!
}

scalar Date

type User {
  id: ID!
  name: String!
  password: String!
  give: [Post!]
  order: [Post!]
}

type Post {
  id: ID!
  title: String!
  content: String!
  number: Int!
  location: String!
  timestamp: Date!
  from: String!
}

# Input for creating a post
input NewPostInput {
  title: String!
  content: String!
  number: Int!
  location: String!
  from: String!
}
